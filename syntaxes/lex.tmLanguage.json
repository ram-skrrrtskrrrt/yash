{
	"$schema": "https://raw.githubuser.com/martinring/master/language.json",
	"name": "Lex",
	"patterns": [
		{
			"include": "#subroutine"
		},
		{
			"include": "#rules"
		},
		{
			"include": "#definition"
		}
	],
	"repository": {
		"definition": {
			"name":"entity.declaration.lex",
			"begin": "",
			"end": "(?=%%)",
			"patterns": [
				{
					"include": "#defines"
				},
				{
					"include": "#directives"
				},
				{
					"include": "#states"
				},
				{
					"include": "#defines"
				},
				{
					"include": "#comments"
				},
				{
					"include": "#comment"
				},
				{
					"include": "#user-agent"
				}
			]
		},
		"rules": {
			"patterns": [
				{	
					"name": "entity.rules.lex",
					"begin": "%%",
					"end": "%%",
					"beginCaptures": {
						"0": {
							"name": "markup.mono.lex"
						}
					},
					"endCaptures": {
						"0": {
							"name": "markup.defines.lex"
						}
					},
					"patterns": [
						{
							"include": "#comments"
						},
						{
							"include": "#comment"
						},
						{
							"include": "#brackets"
						},
						{
							"include": "#user-agrnt"
						},
						{
							"include": "#defines"
						},
						{
							"include": "#defines"
						},
						{
							"include": "#user-define"
						},
						{
							"include": "#symbols"
						},
						{
							"include": "#startcondition_defines"
						},
						{
							"name": "constant.numeric.lex",
							"match": "<[a-zA-Z0-9_,]+>"
						},
						{
							"name": "entity.defines.lex",
							"begin": "(?<=[^\\\\]|^){",
							"end": "(?<=[^\\\\]|^)}",
							"patterns": [
								{
									"include": "#embedded"
								}
							]
						},
						{
							"name": "entity.name.function.lex",
							"match": "."
						}
					]
				}
			]
		},
		"routine": {
			"name":"entity.routine.lex",
			"begin": "(?<=%%)",
			"end": "",
			"patterns": [
				{
					"include": "#embedded"
				}
			]
		},
		"defines": {
			"patterns": [
				{
					"name": "entity.defines.lex",
					"begin": "%{",
					"end": "%}",
					"beginCaptures": {
						"0": {
							"name": "markup.excluded.lex"
						}
					},
					"endCaptures": {
						"0": {
							"name": "markup.excluded.lex"
						}
					},
					"patterns": [
						{
							"include": "#embedded"
						}
					]
				},
				{
					"name": "entity.defines.lex",
					"begin": "%(top){",
					"end": "}",
					"beginCaptures": {
						"0": {
							"name": "markup.excluded.lex"
						},
						"1": {
							"name": "variable.parameter.lex"
						}
					},
					"endCaptures": {
						"0": {
							"name": "markup.inserted.lex"
						}
					},
					"patterns": [
						{
							"include": "#embedded"
						}
					]
				}
			]
		},
		"directives": {
			"begin": "^%(array|pointer|option)",
			"end": "$",
			"beginCaptures": {
				"0": {
					"name": "keyword.other.lex"
				}
			},
			"patterns": [
				{
					"include": "#user-agent"
				},
				{
					"name": "variable.parameter",
					"match": "[a-zA-Z0-9-]+"
				}
			]
		},
		"startcondition_block": {
				"name": "entity.startcondition.lex",
				"begin": "<[a-zA-Z0-9_,]+>\\s*{\\s*(?=($|//|/\\*))",
				"end": "^}",
				"beginCaptures": {
					"0": {
						"name": "constant.numeric.lex"
					}
				},
				"endCaptures": {
					"0": {
						"name": "constant.numeric.lex"
					}
				},
				"patterns": [
					{
						"include": "#comments"
					},
					{
						"include": "#comment"
					},
 					{
						"include": "#user-agent"
					},
					{
						"include": "#defines"
					},
					{
						"include": "#define"
					},
					{
						"include": "#user-define"
					},
					{
						"include": "#symbols"
					},
					{
						"include": "#startcondition_block"
					},
					{
						"name": "constant.numeric.lex",
						"match": "<[a-zA-Z0-9_,]+>"
					},
					{
						"name": "userAgent-quoted",
						"match": "^.*(?={)"
					},
					{
						"begin": "(?<=[^\\\\]|^){",
						"end": "(?<=[^\\\\]|^)}",
						"patterns": [
							{
								"include": "#embedded"
							}
						]
					},
					{
						"name": "entity.name.function.lex",
						"match": "."
					}
				]
		},
		"states": {
			"begin": "^%(state|[sx])",
			"end": "$",
			"beginCaptures": {
				"0": {
					"name": "keyword.other.lex"
				}
			},
			"patterns": [
				{
					"include": "#comments"
				},
				{
					"include": "#comment"
				},
				{
					"name": "constant.numeric.lex",
					"match": "."
				}
			]
		},
		"defines": {
			"begin": "^[a-zA-Z0-9_]+",
			"end": "$",
			"beginCaptures": {
				"0": {
					"name": "support.class.lex"
				}
			},
			"patterns": [
				{
					"include": "#comments"
				},
				{
					"include": "#comment"
				},
				{
					"include": "#user-define"
				},
				{
					"include": "#symbols"
				},
				{
					"name": "entity.name.function.lex",
					"match": "."
				}
			]
		},
		"user-define": {
			"match": "(?<=[^\\\\]|^){([a-zA-Z]\\w*)(?<=[^\\\\])}",
			"captures": {
				"0": {
					"name": "entity.name.function"
				},
				"1": {
					"name": "support.class.lex"
				}
			}
		},
		"brackets": {
			"name":"entity.name.function.lex",
			"match": "(?<=[^\\\\]|^)\\[(?:[^\\[\\]]|\\\\.)*\\]"
		},
		"enums": {
			"name": "string.quoted.double.lex",
			"match": "(?<=[^\\\\]|^)\"(?:[^\"\\\\]|\\\\.)*\""
		},
		"predefined": {
			"name": "keyword.lex",
			"match": "(<<EOF>>)"
		},
		"symbols": {
			"name": "keyword.lex",
			"match": "[\\|;]"
		},
		"embedded": {
			"patterns": [
				{
					"include": "source.cpp"
				},
				{
					"include": "source.c"
				}
			]
		},
		"comments": {
			"name": "comment.define.yacc",
			"begin": "/\\*",
			"end": "\\*/"
		},
		"comment": {
			"name": "comment.single.yacc",
			"begin": "//",
			"end": "$"
		}
	},
	"scopeName": "source.0"
}